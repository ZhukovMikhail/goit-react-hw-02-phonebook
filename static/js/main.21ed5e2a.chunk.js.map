{"version":3,"sources":["Components/Contacts/Contacts.jsx","App.js","index.js"],"names":["Contacts","contItems","filteredValue","filter","contItem","name","toLowerCase","includes","map","number","App","state","contacts","id","hendleOnchange","e","target","value","setState","onSubmitForm","preventDefault","prev","uuidv4","className","onSubmit","this","type","onChange","pattern","title","required","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSA2BeA,EAzBE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAC7B,MAAsB,KAAlBA,EACkBD,EAAUE,QAAO,SAAAC,GAAQ,OAC3CA,EAASC,KAAKC,cAAcC,SAASL,EAAcI,kBAElCE,KAAI,SAAAJ,GAAQ,OAC7B,+BACE,+BAAOA,EAASC,OAChB,+BAAOD,EAASK,eAKlB,6BACGR,EAAUO,KAAI,SAAAJ,GAAQ,OACrB,+BACE,+BAAOA,EAASC,OAChB,+BAAOD,EAASK,kB,QCbtBC,E,4MACJC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQR,KAAM,gBAAiBI,OAAQ,aAC7C,CAAEI,GAAI,OAAQR,KAAM,iBAAkBI,OAAQ,aAC9C,CAAEI,GAAI,OAAQR,KAAM,gBAAiBI,OAAQ,aAC7C,CAAEI,GAAI,OAAQR,KAAM,iBAAkBI,OAAQ,cAEhDN,OAAQ,GACRE,KAAM,GACNI,OAAQ,I,EAGVK,eAAiB,SAAAC,GACf,MAAwBA,EAAEC,OAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBb,EAAOY,K,EAE1BE,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKF,UAAS,SAAAG,GAAI,MAAK,CACrBT,SAAS,GAAD,mBACHS,EAAKT,UADF,CAEN,CAAEP,KAAM,EAAKM,MAAMN,KAAMQ,GAAIS,cAAUb,OAAQ,EAAKE,MAAMF,cAG9D,EAAKS,SAAS,CACZb,KAAM,GACNI,OAAQ,M,4CAGZ,WACE,OACE,sBAAKc,UAAU,UAAf,UACE,uBAAMC,SAAUC,KAAKN,aAArB,UACE,yCAEE,uBACEO,KAAK,OACLrB,KAAK,OACLY,MAAOQ,KAAKd,MAAMN,KAClBsB,SAAUF,KAAKX,eACfc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEJ,KAAK,MACLrB,KAAK,SACLY,MAAOQ,KAAKd,MAAMF,OAClBkB,SAAUF,KAAKX,eACfc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQJ,KAAK,SAAb,4BAEF,0CACA,0DAEE,uBACEA,KAAK,OACLrB,KAAK,SACLY,MAAOQ,KAAKd,MAAMR,OAClBwB,SAAUF,KAAKX,oBAInB,cAAC,EAAD,CACEb,UAAWwB,KAAKd,MAAMC,SACtBV,cAAeuB,KAAKd,MAAMR,gB,GA3ElB4B,aAiFHrB,IClFfsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.21ed5e2a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Contacts = ({ contItems, filteredValue }) => {\r\n  if (filteredValue !== '') {\r\n    const filteredArr = contItems.filter(contItem =>\r\n      contItem.name.toLowerCase().includes(filteredValue.toLowerCase()),\r\n    );\r\n    return filteredArr.map(contItem => (\r\n      <li>\r\n        <span>{contItem.name}</span>\r\n        <span>{contItem.number}</span>\r\n      </li>\r\n    ));\r\n  } else {\r\n    return (\r\n      <ul>\r\n        {contItems.map(contItem => (\r\n          <li>\r\n            <span>{contItem.name}</span>\r\n            <span>{contItem.number}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Contacts;\r\n// filteredValue !== 0 &&\r\n// filteredValue === contItem.name &&\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Contacts from './Components/Contacts/Contacts.jsx';\n// import Filter from './Components/Filter/Filter.jsx';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  hendleOnchange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n  onSubmitForm = e => {\n    e.preventDefault();\n    //не работает метод push()!!!!!!!!! не понял почему!!!!!!!!!!!!!! 1 час в пустую!\n    this.setState(prev => ({\n      contacts: [\n        ...prev.contacts,\n        { name: this.state.name, id: uuidv4(), number: this.state.number },\n      ],\n    }));\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    return (\n      <div className=\"section\">\n        <form onSubmit={this.onSubmitForm}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.hendleOnchange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.hendleOnchange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\">Add Contact</button>\n        </form>\n        <h2>Contatts</h2>\n        <label>\n          Find contacts by name\n          <input\n            type=\"text\"\n            name=\"filter\"\n            value={this.state.filter}\n            onChange={this.hendleOnchange}\n          />\n        </label>\n\n        <Contacts\n          contItems={this.state.contacts}\n          filteredValue={this.state.filter}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}