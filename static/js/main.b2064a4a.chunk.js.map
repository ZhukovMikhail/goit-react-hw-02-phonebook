{"version":3,"sources":["Components/ContactForm/ContactForm.jsx","Components/Contacts/Contacts.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["ContactForm","onSubmit","hendleOnchange","stateName","stateValue","type","name","value","onChange","pattern","title","required","ContactList","contItems","filteredValue","deleteHandler","filteredItems","filter","contItem","toLowerCase","includes","map","renderItem","id","number","onClick","Filter","filterValue","onFilterChange","App","state","contacts","e","target","setState","onSubmitForm","preventDefault","find","contact","alert","prev","uuidv4","console","dir","currentTarget","parentElement","className","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAkCeA,EAhCK,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,eAAgBC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC1D,OACE,uBAAMH,SAAUA,EAAhB,UACE,yCAEE,uBACEI,KAAK,OACLC,KAAK,OACLC,MAAOJ,EACPK,SAAUN,EACVO,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEN,KAAK,MACLC,KAAK,SACLC,MAAOH,EACPI,SAAUN,EACVO,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQN,KAAK,SAAb,6BCVSO,EAjBK,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACzCC,EAAgBH,EAAUI,QAAO,SAAAC,GAAQ,OAC7CA,EAASZ,KAAKa,cAAcC,SAASN,EAAcK,kBAIrD,OAFsC,KAAlBL,EAAuBE,EAAgBH,GAExCQ,KAAI,SAAAC,GAAU,OAC/B,6BACE,qBAAIC,GAAID,EAAWC,GAAnB,UACE,+BAAOD,EAAWhB,OAClB,+BAAOgB,EAAWE,SAClB,wBAAQC,QAASV,EAAjB,6BCCOW,EAbA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAC7B,OACE,0DAEE,uBACEvB,KAAK,OACLC,KAAK,SACLC,MAAOoB,EACPnB,SAAUoB,Q,QCFZC,E,4MACJC,MAAQ,CACNC,SAAU,CACR,CAAER,GAAI,OAAQjB,KAAM,gBAAiBkB,OAAQ,aAC7C,CAAED,GAAI,OAAQjB,KAAM,iBAAkBkB,OAAQ,aAC9C,CAAED,GAAI,OAAQjB,KAAM,gBAAiBkB,OAAQ,aAC7C,CAAED,GAAI,OAAQjB,KAAM,iBAAkBkB,OAAQ,cAEhDP,OAAQ,GACRX,KAAM,GACNkB,OAAQ,I,EAGVtB,eAAiB,SAAA8B,GACf,MAAwBA,EAAEC,OAAlB3B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAK2B,SAAL,eAAiB5B,EAAOC,K,EAE1B4B,aAAe,SAAAH,GACbA,EAAEI,iBAEE,EAAKN,MAAMC,SAASM,MAAK,SAAAC,GAAO,OAAIA,EAAQhC,OAAS,EAAKwB,MAAMxB,QAClEiC,MAAM,EAAKT,MAAMxB,KAAO,4BAI1B,EAAK4B,UAAS,SAAAM,GAAI,MAAK,CACrBT,SAAS,GAAD,mBACHS,EAAKT,UADF,CAEN,CAAEzB,KAAM,EAAKwB,MAAMxB,KAAMiB,GAAIkB,cAAUjB,OAAQ,EAAKM,MAAMN,cAG9D,EAAKU,SAAS,CACZ5B,KAAM,GACNkB,OAAQ,O,EAGZT,cAAgB,SAAAiB,GACdU,QAAQC,IAAIX,EAAEY,cAAcC,cAActB,IAC1C,EAAKW,SAAS,CACZH,SAAU,EAAKD,MAAMC,SAASd,QAC5B,SAAAqB,GAAO,OAAIA,EAAQf,KAAOS,EAAEY,cAAcC,cAActB,S,4CAI9D,WACE,OACE,qCACE,sBAAKuB,UAAU,UAAf,UACE,2CACA,cAAC,EAAD,CACE7C,SAAU8C,KAAKZ,aACfjC,eAAgB6C,KAAK7C,eACrBC,UAAW4C,KAAKjB,MAAMxB,KACtBF,WAAY2C,KAAKjB,MAAMN,YAG3B,0CACA,cAAC,EAAD,CACEG,YAAaoB,KAAKjB,MAAMb,OACxBW,eAAgBmB,KAAK7C,iBAEvB,cAAC,EAAD,CACEW,UAAWkC,KAAKjB,MAAMC,SACtBjB,cAAeiC,KAAKjB,MAAMb,OAC1BF,cAAegC,KAAKhC,uB,GAjEZiC,aAuEHnB,ICzEfoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b2064a4a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ContactForm = ({ onSubmit, hendleOnchange, stateName, stateValue }) => {\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={stateName}\r\n          onChange={hendleOnchange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={stateValue}\r\n          onChange={hendleOnchange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\n\r\nconst ContactList = ({ contItems, filteredValue, deleteHandler }) => {\r\n  const filteredItems = contItems.filter(contItem =>\r\n    contItem.name.toLowerCase().includes(filteredValue.toLowerCase()),\r\n  );\r\n  const renderItems = filteredValue !== '' ? filteredItems : contItems;\r\n\r\n  return renderItems.map(renderItem => (\r\n    <ul>\r\n      <li id={renderItem.id}>\r\n        <span>{renderItem.name}</span>\r\n        <span>{renderItem.number}</span>\r\n        <button onClick={deleteHandler}>delete</button>\r\n      </li>\r\n    </ul>\r\n  ));\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nconst Filter = ({ filterValue, onFilterChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filterValue}\r\n        onChange={onFilterChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nexport default Filter;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from './Components/ContactForm/ContactForm.jsx';\nimport ContactList from './Components/Contacts/Contacts.jsx';\nimport Filter from './Components/Filter/Filter.jsx';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  hendleOnchange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n  onSubmitForm = e => {\n    e.preventDefault();\n\n    if (this.state.contacts.find(contact => contact.name === this.state.name)) {\n      alert(this.state.name + ' is already in contacts');\n      return;\n    }\n    //не работает метод push()!!!!!!!!! не понял почему!!!!!!!!!!!!!! 1 час в пустую!\n    this.setState(prev => ({\n      contacts: [\n        ...prev.contacts,\n        { name: this.state.name, id: uuidv4(), number: this.state.number },\n      ],\n    }));\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  deleteHandler = e => {\n    console.dir(e.currentTarget.parentElement.id);\n    this.setState({\n      contacts: this.state.contacts.filter(\n        contact => contact.id !== e.currentTarget.parentElement.id,\n      ),\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"section\">\n          <h2>Phonebook</h2>\n          <ContactForm\n            onSubmit={this.onSubmitForm}\n            hendleOnchange={this.hendleOnchange}\n            stateName={this.state.name}\n            stateValue={this.state.number}\n          />\n        </div>\n        <h2>Contatts</h2>\n        <Filter\n          filterValue={this.state.filter}\n          onFilterChange={this.hendleOnchange}\n        />\n        <ContactList\n          contItems={this.state.contacts}\n          filteredValue={this.state.filter}\n          deleteHandler={this.deleteHandler}\n        />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}